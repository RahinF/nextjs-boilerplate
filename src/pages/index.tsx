import Button from '@/components/Button';
import { graphql } from '@/gql/index';
import { dehydrate, QueryClient, useQuery } from '@tanstack/react-query';
import request from 'graphql-request';
import Head from 'next/head';

const GET_COUNTRIES = graphql(`
  query GetCounties {
    countries {
      code
      name
    }
  }
`);

const GET_COUNTRY = graphql(`
  query GetCountry($code: ID!) {
    country(code: $code) {
      code
      name
    }
  }
`);

const endpoint = process.env.NEXT_PUBLIC_API_URL!;

const fetchCountries = async () =>
  await request({
    url: endpoint,
    document: GET_COUNTRIES,
  });

const fetchCountry = async (variable: string) =>
  await request({
    url: endpoint,
    document: GET_COUNTRY,
    variables: { code: variable },
  });

export const getServerSideProps = async () => {
  const queryClient = new QueryClient();

  await queryClient.prefetchQuery({
    queryKey: ['countries'],
    queryFn: fetchCountries,
  });

  return {
    props: {
      dehydratedState: dehydrate(queryClient),
    },
  };
};

export default function Home() {
  const { isSuccess, data, isError } = useQuery({
    queryKey: ['countries'],
    queryFn: fetchCountries,
  });

  const { data: country } = useQuery({
    queryKey: ['country'],
    queryFn: () => fetchCountry('AU'),
  });

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1"
        />
        <link
          rel="icon"
          href="/favicon.ico"
        />
      </Head>
      <main>
        <h1 className="text-2xl">Nextjs Boilerplate</h1>
        <Button />

        <div>
          {isSuccess &&
            data.countries.map((country) => (
              <div key={country.code}>{country.name}</div>
            ))}
        </div>
      </main>
    </>
  );
}
